<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.9.2 on win32)" generated="20221203 23:44:46.775" rpa="false" schemaversion="2">
<suite id="s1" name="DataBaseTest" source="C:\Users\sourabna\PycharmProjects\DataBaseTesting\TestCases\DataBaseTest.robot">
<test id="s1-t1" name="Verify Successful creation of Table">
<kw name="Connect DB">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPassword}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20221203 23:44:46.917" level="INFO">Connecting using : pymysql.connect(db=robot_fr_test, user=robot_fr_test, passwd=Le@rning9752, host=db4free.net, port=3306, charset=None) </msg>
<status status="PASS" starttime="20221203 23:44:46.828" endtime="20221203 23:44:48.031"/>
</kw>
<status status="PASS" starttime="20221203 23:44:46.827" endtime="20221203 23:44:48.031"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${output}</var>
<arg>CREATE TABLE Persons (PersonID int, FirstName varchar(255), Address varchar(255), city varchar(255));</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20221203 23:44:48.039" level="INFO">Executing : Execute SQL String  |  CREATE TABLE Persons (PersonID int, FirstName varchar(255), Address varchar(255), city varchar(255)); </msg>
<msg timestamp="20221203 23:44:48.453" level="FAIL">OperationalError: (1050, "Table 'Persons' already exists")</msg>
<status status="FAIL" starttime="20221203 23:44:48.038" endtime="20221203 23:44:48.453"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>None</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20221203 23:44:48.457" endtime="20221203 23:44:48.458"/>
</kw>
<doc>The test case verifies that user is able to create the database table successfully</doc>
<status status="FAIL" starttime="20221203 23:44:46.826" endtime="20221203 23:44:48.459">OperationalError: (1050, "Table 'Persons' already exists")</status>
</test>
<test id="s1-t2" name="Verfy Data Insertion In Table">
<kw name="Execute Sql Script" library="DatabaseLibrary">
<var>${output}</var>
<arg>./Resources/DB Data/insert.sql</arg>
<doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for setting the database to a known
state before running your tests, or clearing out your test data after running each a test. Set optional input
`sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20221203 23:44:48.468" level="INFO">Executing : Execute SQL Script  |  ./Resources/DB Data/insert.sql </msg>
<msg timestamp="20221203 23:44:49.941" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20221203 23:44:48.466" endtime="20221203 23:44:49.941"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>None</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20221203 23:44:49.943" level="INFO">Argument types are:
&lt;class 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20221203 23:44:49.942" endtime="20221203 23:44:49.943"/>
</kw>
<doc>The test case verifies that the user is able to insert the data in table successfully</doc>
<status status="PASS" starttime="20221203 23:44:48.464" endtime="20221203 23:44:49.944"/>
</test>
<test id="s1-t3" name="Verify Data Update in Table">
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${output}</var>
<arg>UPDATE Persons SET FirstName = "Kevin" WHERE City="Rio"</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20221203 23:44:49.952" level="INFO">Executing : Execute SQL String  |  UPDATE Persons SET FirstName = "Kevin" WHERE City="Rio" </msg>
<msg timestamp="20221203 23:44:50.804" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20221203 23:44:49.951" endtime="20221203 23:44:50.804"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>None</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20221203 23:44:50.805" level="INFO">Argument types are:
&lt;class 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20221203 23:44:50.805" endtime="20221203 23:44:50.805"/>
</kw>
<doc>This test case verifies a user can update a table record</doc>
<status status="PASS" starttime="20221203 23:44:49.949" endtime="20221203 23:44:50.806"/>
</test>
<doc>Data Base testing in Robot Framework</doc>
<status status="FAIL" starttime="20221203 23:44:46.776" endtime="20221203 23:44:50.808"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="DataBaseTest">DataBaseTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
